using System;
using System.Collections.Generic;
using System.Text;
using Utilities;
using ValueAtRisk.Models.Instruments;

namespace ValueAtRisk.Models
{
    /// <summary>
    /// This class is a basic container for all the information related to any given transaction
    /// It will be used throughout the entire VAR project
    /// </summary>
    public class Transaction
    {
        internal object FinancialInstrument{ get; set; }
        //Unique transaction ID generated by Global Update when we transaction
        internal int TransactionId { get; set; }
        //The creation date of the transaction
        internal DateTime TransactionDate { get; set; }
        //The price at which the deal was transactiond
        internal double FixedPrice { get; set; }
        //The quantity transactiond (it can be in Mt, Cbm, Gallons)
        //It does not matter which denomination it is as long as
        //the price is stated for the same denomination
        internal double Quantity { get; set; }
        internal enum Currency
        {
            Usd,
            Eur,
            Gbp,
            Sek,
            Sgd,
            Nok,
            Dkk,
            Cad,
            Aud,
            Chf
        }
        //Who is the seller
        internal string SellerId
        {
            get { return _sellerId; }
            set { _sellerId = value.ToLower(); }
        }
        private string _sellerId;
        //Who is the buyer
        internal string BuyerId
        {
            get { return _buyerId; }
            set { _buyerId = value.ToLower(); }
        }
        private string _buyerId;
        //The ID code for the FX in which the deal is transactiond
        internal string Fx { get; set; }
        public Transaction(object financialInstrument, int transactionId, DateTime transactionDate, double fixedPrice, 
            double quantity, string fx, string sellerId, string buyerId)
        {
            FinancialInstrument = Helper.GetInstrumentType(financialInstrument);
            TransactionId = transactionId;
            TransactionDate = transactionDate;
            FixedPrice = fixedPrice;
            Fx = fx;
            Quantity = quantity;
            SellerId = sellerId;
            BuyerId = buyerId;
        }

    }
}
